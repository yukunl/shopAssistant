{"ast":null,"code":"var _jsxFileName = \"/Users/a-kun/Desktop/639/dialogflow-beta-2020/src/components/Messages.js\";\nimport React from 'react';\nimport '../styles/App.css';\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMessages();\n  }\n\n  render() {\n    if (this.state.show) {\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          borderBottom: '1px solid #aaaaaa',\n          width: 300,\n          backgroundColor: '#c5050c',\n          borderTopLeftRadius: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          border: 'none',\n          backgroundColor: '#c5050c',\n          marginLeft: 10,\n          fontSize: 15,\n          color: '#f9f9f9',\n          borderRadius: 30\n        },\n        onClick: () => this.setState({\n          show: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"div\", {\n        style: {\n          paddingLeft: 60,\n          fontSize: 25,\n          color: '#f9f9f9'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Messages\")), React.createElement(\"div\", {\n        style: {\n          height: 500,\n          width: 300,\n          border: '1px solid #aaaaaa',\n          backgroundColor: 'white',\n          overflowY: 'auto',\n          paddingRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.getMessages()));\n    }\n\n    return React.createElement(\"button\", {\n      style: {\n        width: 300,\n        border: '1px solid #aaaaaa',\n        borderTopLeftRadius: 10,\n        padding: 10,\n        color: '#f9f9f9',\n        backgroundColor: '#c5050c'\n      },\n      onClick: () => this.setState({\n        show: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Show messages\");\n  }\n\n  async fetchMessages() {\n    while (true) {\n      let myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"x-access-token\", localStorage.getItem('token'));\n      let requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n      };\n      let response = await fetch(window.$ENDPOINT_URL + '/application/messages', requestOptions);\n\n      if (!response.ok) {\n        await this.delay(500);\n        continue;\n      }\n\n      let result = await response.json();\n\n      if (this.state.messages.length !== result.messages.length) {\n        this.setState({\n          messages: result.messages\n        });\n        continue;\n      }\n\n      for (let i = 0; i < this.state.messages.length; i++) {\n        if (result.messages[i] !== this.state.messages[i]) {\n          await this.setState({\n            messages: result.messages\n          });\n          break;\n        }\n      }\n\n      await this.delay(500);\n    }\n  }\n\n  async delay(delayInms) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(2);\n      }, delayInms);\n    });\n  }\n\n  getMessages() {\n    let messages = [];\n\n    for (const message of this.state.messages) {\n      if (message.isUser) {\n        messages.push(React.createElement(\"div\", {\n          key: message.id,\n          style: {\n            width: 200,\n            backgroundColor: '#2d78cf',\n            margin: 20,\n            marginLeft: 75,\n            borderRadius: 20,\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, message.text));\n      } else {\n        messages.push(React.createElement(\"div\", {\n          key: message.id,\n          style: {\n            width: 200,\n            backgroundColor: '#b2c4d9',\n            margin: 20,\n            marginLeft: 10,\n            borderRadius: 20,\n            padding: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, message.text));\n      }\n    }\n\n    return messages;\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/a-kun/Desktop/639/dialogflow-beta-2020/src/components/Messages.js"],"names":["React","Messages","Component","constructor","props","state","messages","show","componentDidMount","fetchMessages","render","display","flexDirection","borderBottom","width","backgroundColor","borderTopLeftRadius","border","marginLeft","fontSize","color","borderRadius","setState","paddingLeft","height","overflowY","paddingRight","getMessages","padding","myHeaders","Headers","append","localStorage","getItem","requestOptions","method","headers","redirect","response","fetch","window","$ENDPOINT_URL","ok","delay","result","json","length","i","delayInms","Promise","resolve","setTimeout","message","isUser","push","id","margin","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKL,KAAL,CAAWE,IAAd,EAAoB;AAClB,aACE;AAAK,QAAA,KAAK,EAAE;AAACI,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,aAAa,EAAE;AAAjC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAACD,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,aAAa,EAAE,KAAjC;AAAwCC,UAAAA,YAAY,EAAE,mBAAtD;AAA2EC,UAAAA,KAAK,EAAE,GAAlF;AAAuFC,UAAAA,eAAe,EAAE,SAAxG;AAAmHC,UAAAA,mBAAmB,EAAE;AAAxI,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,MAAT;AAAiBF,UAAAA,eAAe,EAAE,SAAlC;AAA6CG,UAAAA,UAAU,EAAE,EAAzD;AAA6DC,UAAAA,QAAQ,EAAE,EAAvE;AAA2EC,UAAAA,KAAK,EAAE,SAAlF;AAA6FC,UAAAA,YAAY,EAAE;AAA3G,SAAf;AAA+H,QAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACf,UAAAA,IAAI,EAAE;AAAP,SAAd,CAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,QAAA,KAAK,EAAE;AAACgB,UAAAA,WAAW,EAAE,EAAd;AAAkBJ,UAAAA,QAAQ,EAAE,EAA5B;AAAgCC,UAAAA,KAAK,EAAE;AAAvC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,EAME;AAAK,QAAA,KAAK,EAAE;AAACI,UAAAA,MAAM,EAAE,GAAT;AAAcV,UAAAA,KAAK,EAAE,GAArB;AAA0BG,UAAAA,MAAM,EAAE,mBAAlC;AAAuDF,UAAAA,eAAe,EAAE,OAAxE;AAAiFU,UAAAA,SAAS,EAAE,MAA5F;AAAoGC,UAAAA,YAAY,EAAE;AAAlH,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,WAAL,EADH,CANF,CADF;AAYD;;AACD,WACE;AAAQ,MAAA,KAAK,EAAE;AAACb,QAAAA,KAAK,EAAE,GAAR;AAAaG,QAAAA,MAAM,EAAE,mBAArB;AAA0CD,QAAAA,mBAAmB,EAAE,EAA/D;AAAmEY,QAAAA,OAAO,EAAE,EAA5E;AAAgFR,QAAAA,KAAK,EAAE,SAAvF;AAAkGL,QAAAA,eAAe,EAAE;AAAnH,OAAf;AAA8I,MAAA,OAAO,EAAE,MAAM,KAAKO,QAAL,CAAc;AAACf,QAAAA,IAAI,EAAE;AAAP,OAAd,CAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF;AAKD;;AAED,QAAME,aAAN,GAAsB;AACpB,WAAM,IAAN,EAAY;AACV,UAAIoB,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAF,MAAAA,SAAS,CAACE,MAAV,CAAiB,gBAAjB,EAAmCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnC;AAEA,UAAIC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,KADW;AAEnBC,QAAAA,OAAO,EAAEP,SAFU;AAGnBQ,QAAAA,QAAQ,EAAE;AAHS,OAArB;AAMA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACC,MAAM,CAACC,aAAP,GAAuB,uBAAxB,EAAiDP,cAAjD,CAA1B;;AACA,UAAG,CAACI,QAAQ,CAACI,EAAb,EAAiB;AACf,cAAM,KAAKC,KAAL,CAAW,GAAX,CAAN;AACA;AACD;;AACD,UAAIC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;;AAEA,UAAG,KAAKxC,KAAL,CAAWC,QAAX,CAAoBwC,MAApB,KAA+BF,MAAM,CAACtC,QAAP,CAAgBwC,MAAlD,EAA0D;AACxD,aAAKxB,QAAL,CAAc;AAAChB,UAAAA,QAAQ,EAAEsC,MAAM,CAACtC;AAAlB,SAAd;AACA;AACD;;AAED,WAAI,IAAIyC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAK1C,KAAL,CAAWC,QAAX,CAAoBwC,MAAvC,EAA+CC,CAAC,EAAhD,EAAoD;AAClD,YAAGH,MAAM,CAACtC,QAAP,CAAgByC,CAAhB,MAAuB,KAAK1C,KAAL,CAAWC,QAAX,CAAoByC,CAApB,CAA1B,EAAkD;AAChD,gBAAM,KAAKzB,QAAL,CAAc;AAAChB,YAAAA,QAAQ,EAAEsC,MAAM,CAACtC;AAAlB,WAAd,CAAN;AACA;AACD;AACF;;AACD,YAAM,KAAKqC,KAAL,CAAW,GAAX,CAAN;AACD;AACF;;AAED,QAAMA,KAAN,CAAYK,SAAZ,EAAuB;AACrB,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAK;AAC7BC,MAAAA,UAAU,CAAC,MAAM;AACfD,QAAAA,OAAO,CAAC,CAAD,CAAP;AACD,OAFS,EAEPF,SAFO,CAAV;AAGD,KAJM,CAAP;AAKD;;AAEDrB,EAAAA,WAAW,GAAG;AACZ,QAAIrB,QAAQ,GAAG,EAAf;;AAEA,SAAI,MAAM8C,OAAV,IAAqB,KAAK/C,KAAL,CAAWC,QAAhC,EAA0C;AACxC,UAAG8C,OAAO,CAACC,MAAX,EAAmB;AACjB/C,QAAAA,QAAQ,CAACgD,IAAT,CACE;AAAK,UAAA,GAAG,EAAEF,OAAO,CAACG,EAAlB;AAAsB,UAAA,KAAK,EAAE;AAACzC,YAAAA,KAAK,EAAE,GAAR;AAAaC,YAAAA,eAAe,EAAE,SAA9B;AAAyCyC,YAAAA,MAAM,EAAE,EAAjD;AAAqDtC,YAAAA,UAAU,EAAE,EAAjE;AAAqEG,YAAAA,YAAY,EAAE,EAAnF;AAAuFO,YAAAA,OAAO,EAAE;AAAhG,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGwB,OAAO,CAACK,IADX,CADF;AAKD,OAND,MAOK;AACHnD,QAAAA,QAAQ,CAACgD,IAAT,CACE;AAAK,UAAA,GAAG,EAAEF,OAAO,CAACG,EAAlB;AAAsB,UAAA,KAAK,EAAE;AAACzC,YAAAA,KAAK,EAAE,GAAR;AAAaC,YAAAA,eAAe,EAAE,SAA9B;AAAyCyC,YAAAA,MAAM,EAAE,EAAjD;AAAqDtC,YAAAA,UAAU,EAAE,EAAjE;AAAqEG,YAAAA,YAAY,EAAE,EAAnF;AAAuFO,YAAAA,OAAO,EAAE;AAAhG,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGwB,OAAO,CAACK,IADX,CADF;AAKD;AACF;;AAED,WAAOnD,QAAP;AACD;;AAlGoC;;AAqGvC,eAAeL,QAAf","sourcesContent":["import React from 'react';\r\nimport '../styles/App.css';\r\n\r\nclass Messages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      show: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchMessages();\r\n  }\r\n\r\n  render() {\r\n    if(this.state.show) {\r\n      return (\r\n        <div style={{display: 'flex', flexDirection: 'column'}}>\r\n          <div style={{display: 'flex', flexDirection: 'row', borderBottom: '1px solid #aaaaaa', width: 300, backgroundColor: '#c5050c', borderTopLeftRadius: 10}}>\r\n            <button style={{border: 'none', backgroundColor: '#c5050c', marginLeft: 10, fontSize: 15, color: '#f9f9f9', borderRadius: 30}} onClick={() => this.setState({show: false})}>✕</button>\r\n            <div style={{paddingLeft: 60, fontSize: 25, color: '#f9f9f9'}}>Messages</div>\r\n          </div>\r\n\r\n          <div style={{height: 500, width: 300, border: '1px solid #aaaaaa', backgroundColor: 'white', overflowY: 'auto', paddingRight: 20}}>\r\n            {this.getMessages()}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <button style={{width: 300, border: '1px solid #aaaaaa', borderTopLeftRadius: 10, padding: 10, color: '#f9f9f9', backgroundColor: '#c5050c'}} onClick={() => this.setState({show: true})}>\r\n        Show messages\r\n      </button>\r\n    )\r\n  }\r\n\r\n  async fetchMessages() {\r\n    while(true) {\r\n      let myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      myHeaders.append(\"x-access-token\", localStorage.getItem('token'));\r\n\r\n      let requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n      };\r\n\r\n      let response = await fetch(window.$ENDPOINT_URL + '/application/messages', requestOptions);\r\n      if(!response.ok) {\r\n        await this.delay(500);\r\n        continue;\r\n      }\r\n      let result = await response.json();\r\n\r\n      if(this.state.messages.length !== result.messages.length) {\r\n        this.setState({messages: result.messages})\r\n        continue;\r\n      }\r\n\r\n      for(let i = 0; i < this.state.messages.length; i++) {\r\n        if(result.messages[i] !== this.state.messages[i]) {\r\n          await this.setState({messages: result.messages});\r\n          break;\r\n        }\r\n      }\r\n      await this.delay(500);\r\n    }\r\n  }\r\n\r\n  async delay(delayInms) {\r\n    return new Promise(resolve  => {\r\n      setTimeout(() => {\r\n        resolve(2);\r\n      }, delayInms);\r\n    });\r\n  }\r\n\r\n  getMessages() {\r\n    let messages = [];\r\n\r\n    for(const message of this.state.messages) {\r\n      if(message.isUser) {\r\n        messages.push (\r\n          <div key={message.id} style={{width: 200, backgroundColor: '#2d78cf', margin: 20, marginLeft: 75, borderRadius: 20, padding: 10}}>\r\n            {message.text}\r\n          </div>\r\n        )\r\n      }\r\n      else {\r\n        messages.push (\r\n          <div key={message.id} style={{width: 200, backgroundColor: '#b2c4d9', margin: 20, marginLeft: 10, borderRadius: 20, padding: 10}}>\r\n            {message.text}\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    return messages;\r\n  }\r\n}\r\n\r\nexport default Messages;\r\n"]},"metadata":{},"sourceType":"module"}