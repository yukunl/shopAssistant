{"ast":null,"code":"var _jsxFileName = \"/Users/a-kun/Desktop/639/dialogflow-beta-2020/src/App.js\";\nimport React from 'react';\nimport './styles/App.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from \"react-router-dom\";\nimport Welcome from './components/Welcome';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\nimport CartReview from './components/CartReview';\nimport CartConfirmed from './components/CartConfirmed';\nimport Category from './components/Category';\nimport Product from './components/Product';\nimport Error from './components/Error';\nimport Messages from './components/Messages';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport base64 from 'base-64';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      products: [],\n      serverRoute: '/',\n      shouldUpdate: true\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      fixed: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: localStorage.getItem('auth') ? '/' + localStorage.getItem('username') : '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"WiscShop\")), React.createElement(Nav, {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, localStorage.getItem('auth') ? React.createElement(Link, {\n      to: '/' + localStorage.getItem('username') + \"/cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Navbar.Text, {\n      className: \"mr-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Cart\")) : React.createElement(React.Fragment, null))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Welcome, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/signUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(SignUp, {\n      signUp: (username, password, firstName, lastName) => this.signUp(username, password, firstName, lastName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/signIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(SignIn, {\n      signIn: (username, password) => this.signIn(username, password),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), this.getUserRoutes(), React.createElement(Route, {\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        position: 'fixed',\n        right: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, localStorage.getItem('auth') ? React.createElement(Messages, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null)));\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n    this.fetchProducts();\n    this.routeFromServer();\n  }\n\n  async routeFromServer() {\n    while (this.state.shouldUpdate) {\n      try {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"x-access-token\", localStorage.getItem('token'));\n        var requestOptions = {\n          method: 'GET',\n          headers: myHeaders,\n          redirect: 'follow'\n        };\n        let response = await fetch(window.$ENDPOINT_URL + '/application', requestOptions);\n\n        if (!response.ok) {\n          throw new Error();\n        }\n\n        let result = await response.json();\n        let base = window.location.protocol + \"//\" + window.location.host;\n        let serverRoute = window.location.href.replace(base, \"\");\n\n        if (serverRoute !== result.page) {\n          if (result.dialogflowUpdated) {\n            // update app route\n            window.location.href = base + result.page;\n            this.setState({\n              serverRoute: result.page\n            });\n            let body = JSON.stringify({\n              dialogflowUpdated: false\n            });\n            requestOptions = {\n              method: 'PUT',\n              headers: myHeaders,\n              body: body,\n              redirect: 'follow'\n            };\n            await fetch(window.$ENDPOINT_URL + '/application', requestOptions);\n          } else {\n            // update server route\n            let body = JSON.stringify({\n              page: serverRoute,\n              dialogflowUpdated: false\n            });\n            this.setState({\n              serverRoute: serverRoute\n            });\n            requestOptions = {\n              method: 'PUT',\n              headers: myHeaders,\n              body: body,\n              redirect: 'follow'\n            };\n            await fetch(window.$ENDPOINT_URL + '/application', requestOptions);\n          }\n        } else {\n          // check for back (from server)\n          if (result.back) {\n            window.history.back();\n            let base = window.location.protocol + \"//\" + window.location.host;\n            let serverRoute = window.location.href.replace(base, \"\");\n            this.setState({\n              serverRoute: serverRoute\n            });\n            let body = JSON.stringify({\n              page: serverRoute,\n              dialogflowUpdated: false,\n              back: false\n            });\n            requestOptions = {\n              method: 'PUT',\n              headers: myHeaders,\n              body: body,\n              redirect: 'follow'\n            };\n            await fetch(window.$ENDPOINT_URL + '/application', requestOptions);\n          }\n        }\n\n        await this.delay(500);\n      } catch (error) {\n        await this.getToken(localStorage.getItem('username'), localStorage.getItem('password'));\n      }\n    }\n  }\n\n  async delay(delayInms) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(2);\n      }, delayInms);\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      shouldUpdate: false\n    });\n  }\n\n  getUserRoutes() {\n    let username = localStorage.getItem('username');\n\n    if (username != null) {\n      let routes = [];\n      routes.push(React.createElement(Route, {\n        key: 'route_user',\n        exact: true,\n        path: '/' + username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Home, {\n        username: username,\n        categories: this.state.categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })));\n      routes.push(React.createElement(Route, {\n        key: 'route_user_cart',\n        path: '/' + username + '/cart',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Cart, {\n        username: username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })));\n      routes.push(React.createElement(Route, {\n        key: 'route_user_cart_review',\n        path: '/' + username + '/cart-review',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(CartReview, {\n        username: username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })));\n      routes.push(React.createElement(Route, {\n        key: 'route_user_cart_confirmed',\n        path: '/' + username + '/cart-confirmed',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(CartConfirmed, {\n        username: username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })));\n\n      for (const category of this.state.categories) {\n        routes.push(React.createElement(Route, {\n          key: 'route_user_' + category,\n          exact: true,\n          path: '/' + username + '/' + category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(Category, {\n          name: category,\n          username: username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        })));\n      }\n\n      for (const product of this.state.products) {\n        routes.push(React.createElement(Route, {\n          key: 'route_user_' + product.id,\n          path: '/' + username + '/' + product.category + '/products/' + product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(Product, {\n          product: product,\n          username: username,\n          path: '/products/' + product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        })));\n      }\n\n      return routes;\n    }\n  }\n\n  async fetchCategories() {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"x-access-token\", localStorage.getItem('token'));\n    let requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    let response = await fetch(window.$ENDPOINT_URL + '/categories/', requestOptions);\n    let result = await response.json();\n    this.setState({\n      categories: result.categories\n    });\n  }\n\n  async fetchProducts() {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"x-access-token\", localStorage.getItem('token'));\n    let requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    let response = await fetch(window.$ENDPOINT_URL + '/products/', requestOptions);\n    let result = await response.json();\n    this.setState({\n      products: result.products\n    });\n  }\n\n  async getToken(username, password) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Authorization\", \"Basic \" + base64.encode(username + \":\" + password));\n    let requestOptions = {\n      method: 'GET',\n      headers: headers,\n      redirect: 'follow'\n    };\n\n    try {\n      let response = await fetch(window.$ENDPOINT_URL + '/login/', requestOptions);\n      let result = await response.json();\n\n      if (!('token' in result)) {\n        localStorage.setItem('auth', false);\n        return false;\n      }\n\n      localStorage.setItem('token', result.token);\n      localStorage.setItem('username', username);\n      localStorage.setItem('password', password);\n      this.forceUpdate();\n    } catch (error) {\n      localStorage.setItem('auth', false);\n      return false;\n    }\n\n    return true;\n  }\n\n  async signIn(username, password) {\n    let success = await this.getToken(username, password);\n    localStorage.setItem('auth', true);\n    return success;\n  }\n\n  async signUp(username, password, firstName, lastName) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    let body = JSON.stringify({\n      username: username,\n      password: password,\n      firstName: firstName,\n      lastName: lastName\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: headers,\n      body: body,\n      redirect: 'follow'\n    };\n\n    try {\n      let response = await fetch(window.$ENDPOINT_URL + '/users/', requestOptions);\n      let result = await response.json();\n\n      if (!('message' in result) || result.message !== 'User created!') {\n        return false;\n      }\n\n      let success = await this.getToken(username, password);\n      localStorage.setItem('auth', false);\n      return success;\n    } catch (error) {\n      return false;\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a-kun/Desktop/639/dialogflow-beta-2020/src/App.js"],"names":["React","Navbar","Nav","Link","Welcome","SignUp","SignIn","Home","Cart","CartReview","CartConfirmed","Category","Product","Error","Messages","BrowserRouter","Router","Switch","Route","base64","App","Component","constructor","props","state","categories","products","serverRoute","shouldUpdate","render","height","localStorage","getItem","username","password","firstName","lastName","signUp","signIn","getUserRoutes","display","position","right","bottom","componentDidMount","fetchCategories","fetchProducts","routeFromServer","myHeaders","Headers","append","requestOptions","method","headers","redirect","response","fetch","window","$ENDPOINT_URL","ok","result","json","base","location","protocol","host","href","replace","page","dialogflowUpdated","setState","body","JSON","stringify","back","history","delay","error","getToken","delayInms","Promise","resolve","setTimeout","componentWillUnmount","routes","push","category","product","id","encode","setItem","token","forceUpdate","success","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles/App.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from \"react-router-dom\";\nimport Welcome from './components/Welcome';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\nimport CartReview from './components/CartReview';\nimport CartConfirmed from './components/CartConfirmed';\nimport Category from './components/Category';\nimport Product from './components/Product';\nimport Error from './components/Error';\nimport Messages from './components/Messages';\n\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport base64 from 'base-64';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      products: [],\n      serverRoute: '/',\n      shouldUpdate: true\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Router>\n          <div style={{height: '100vh'}}>\n            <Navbar bg=\"primary\" variant=\"dark\" fixed=\"top\">\n              <Link to={localStorage.getItem('auth') ? '/'+localStorage.getItem('username') : '/'}>\n                <Navbar.Brand>WiscShop</Navbar.Brand>\n              </Link>\n              <Nav className=\"ml-auto\">\n              {localStorage.getItem('auth') ? (\n                <Link to={'/'+localStorage.getItem('username') + \"/cart\"}>\n                  <Navbar.Text className=\"mr-sm-2\">\n                    Cart\n                  </Navbar.Text>\n                </Link>\n\n              ) : <></>}\n\n              </Nav>\n            </Navbar>\n            <Switch>\n              <Route exact path=\"/\">\n                <Welcome/>\n              </Route>\n              <Route path=\"/signUp\">\n                <SignUp signUp={(username, password, firstName, lastName) => this.signUp(username, password, firstName, lastName)}/>\n              </Route>\n              <Route path=\"/signIn\">\n                <SignIn signIn={(username, password) => this.signIn(username, password)}/>\n              </Route>\n              {this.getUserRoutes()}\n              <Route path='/'>\n                <Error/>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n\n        <div style={{display: 'flex', position: 'fixed', right: 0, bottom: 0}}>\n        {\n          localStorage.getItem('auth') ? <Messages/> : <></>\n        }\n        </div>\n      </>\n    )\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n    this.fetchProducts();\n    this.routeFromServer();\n  }\n\n  async routeFromServer() {\n    while(this.state.shouldUpdate) {\n      try {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"x-access-token\", localStorage.getItem('token'));\n\n        var requestOptions = {\n          method: 'GET',\n          headers: myHeaders,\n          redirect: 'follow'\n        };\n\n        let response = await fetch(window.$ENDPOINT_URL + '/application', requestOptions);\n        if(!response.ok) {\n          throw new Error()\n        }\n        let result = await response.json();\n\n        let base = window.location.protocol+\"//\"+window.location.host;\n        let serverRoute = window.location.href.replace(base,\"\");\n\n        if(serverRoute !== result.page) {\n          if(result.dialogflowUpdated) { // update app route\n            window.location.href = base + result.page;\n            this.setState({serverRoute:result.page});\n\n            let body = JSON.stringify({dialogflowUpdated: false});\n\n            requestOptions = {\n              method: 'PUT',\n              headers: myHeaders,\n              body: body,\n              redirect: 'follow'\n            }\n\n            await fetch(window.$ENDPOINT_URL + '/application', requestOptions);\n          }\n          else { // update server route\n            let body = JSON.stringify({page: serverRoute, dialogflowUpdated: false});\n            this.setState({serverRoute:serverRoute});\n            requestOptions = {\n              method: 'PUT',\n              headers: myHeaders,\n              body: body,\n              redirect: 'follow'\n            }\n\n            await fetch(window.$ENDPOINT_URL + '/application', requestOptions);\n          }\n        }\n        else { // check for back (from server)\n          if(result.back) {\n            window.history.back();\n\n            let base = window.location.protocol+\"//\"+window.location.host;\n            let serverRoute = window.location.href.replace(base,\"\");\n            this.setState({serverRoute:serverRoute});\n\n            let body = JSON.stringify({page: serverRoute, dialogflowUpdated: false, back: false});\n\n            requestOptions = {\n              method: 'PUT',\n              headers: myHeaders,\n              body: body,\n              redirect: 'follow'\n            }\n\n            await fetch(window.$ENDPOINT_URL + '/application', requestOptions);\n          }\n        }\n\n        await this.delay(500);\n      }\n      catch(error) {\n        await this.getToken(localStorage.getItem('username'), localStorage.getItem('password'));\n      }\n    }\n  }\n\n  async delay(delayInms) {\n    return new Promise(resolve  => {\n      setTimeout(() => {\n        resolve(2);\n      }, delayInms);\n    });\n  }\n\n  componentWillUnmount(){\n    this.setState({shouldUpdate:false})\n  }\n\n  getUserRoutes() {\n    let username = localStorage.getItem('username');\n\n    if(username != null) {\n      let routes = [];\n\n      routes.push (\n        <Route key={'route_user'} exact path={'/' + username}>\n          <Home username={username} categories={this.state.categories}/>\n        </Route>\n      );\n      routes.push (\n        <Route key={'route_user_cart'} path={'/' + username + '/cart'}>\n          <Cart username={username}/>\n        </Route>\n      );\n      routes.push (\n        <Route key={'route_user_cart_review'} path={'/' + username + '/cart-review'}>\n          <CartReview username={username}/>\n        </Route>\n      );\n      routes.push (\n        <Route key={'route_user_cart_confirmed'} path={'/' + username + '/cart-confirmed'}>\n          <CartConfirmed username={username}/>\n        </Route>\n      );\n\n      for(const category of this.state.categories) {\n        routes.push (\n          <Route key={'route_user_' + category} exact path={'/' + username + '/' + category}>\n            <Category name={category} username={username}/>\n          </Route>\n        );\n      }\n\n      for(const product of this.state.products) {\n        routes.push (\n          <Route key={'route_user_' + product.id} path={'/' + username + '/' + product.category + '/products/' + product.id}>\n            <Product product={product} username={username} path={'/products/' + product.id}/>\n          </Route>\n        )\n      }\n\n      return routes;\n    }\n  }\n\n  async fetchCategories() {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"x-access-token\", localStorage.getItem('token'));\n\n    let requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    let response = await fetch(window.$ENDPOINT_URL + '/categories/', requestOptions);\n    let result = await response.json();\n\n    this.setState({categories: result.categories})\n  }\n\n  async fetchProducts() {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"x-access-token\", localStorage.getItem('token'));\n\n    let requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    let response = await fetch(window.$ENDPOINT_URL + '/products/', requestOptions);\n    let result = await response.json();\n\n    this.setState({products: result.products})\n  }\n\n  async getToken(username, password) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"Authorization\", \"Basic \" + base64.encode(username + \":\" + password));\n\n    let requestOptions = {\n      method: 'GET',\n      headers: headers,\n      redirect: 'follow'\n    };\n\n    try {\n      let response = await fetch(window.$ENDPOINT_URL + '/login/', requestOptions);\n      let result = await response.json();\n      if(!('token' in result)) {\n        localStorage.setItem('auth', false);\n        return false;\n      }\n      localStorage.setItem('token', result.token);\n      localStorage.setItem('username', username);\n      localStorage.setItem('password', password);\n      this.forceUpdate();\n    }\n    catch(error) {\n      localStorage.setItem('auth', false);\n      return false;\n    }\n    return true;\n  }\n\n  async signIn(username, password) {\n    let success = await this.getToken(username, password);\n    localStorage.setItem('auth', true);\n\n    return success;\n  }\n\n  async signUp(username, password, firstName, lastName) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n\n    let body = JSON.stringify({\n      username: username,\n      password: password,\n      firstName: firstName,\n      lastName: lastName\n    })\n\n    var requestOptions = {\n      method: 'POST',\n      headers: headers,\n      body: body,\n      redirect: 'follow'\n    };\n\n    try {\n      let response = await fetch(window.$ENDPOINT_URL + '/users/', requestOptions)\n      let result = await response.json();\n      if(!('message' in result) || result.message !== 'User created!') {\n        return false;\n      }\n\n      let success = await this.getToken(username, password);\n      localStorage.setItem('auth', false);\n      return success;\n    }\n    catch(error) {\n      return false;\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}